1900年1月1日是星期一
1900年1月30日是星期二
2018年6月12日
year:2018
month:6
day:12

从 1900年 开始 到 year-1年  整年相加
从year年 1月 到 month-1月 整月相加
再加day

日 一 二 三 四 五 六
                1  2
 3  4  5  6  7  8  9
10 
=============================================
1、循环的嵌套
	允许在一个循环的内部再出现循环

	for(var i=1;i<=10;i++){
		for(var j=1;j<=10;j++){
			for(var k=1;k<=10;k++){
				
			}
		}
	}
	练习：
		1、在控制台上打印输出
				*        1 : 4个空格1个星
			 ***       2 : 3个空格3个星
			*****      3 : 2个空格5个星
		 *******     4 : 1个空格7个星
		*********    5 : 0个空格9个星
		 *******
		  *****
			 ***
			  *
		空格:5-行数
		星星:2*行数-1
		console.log()
		2、在控制台上打印九九乘法表
		*
		**
		***
		****
		*****

		1*1=1
		1*2=2 2*2=4
		1*3=3 2*3=6 3*3=9
2、函数
	1、什么是函数
		函数，即 function，是一段预定义好，可以独立执行并包含多条执行语句的代码块
		优点:
			1、多条执行语句的封装
			2、实现了代码的复用
	2、在JS中创建函数
		function 函数名(参数列表){
			函数体
			[返回值]
		}

		参数列表：
			如果没有参数，可以为空
			如果有参数，就编写参数列表。如果参数是多个的话，各个参数之间使用","隔开。
			有参数的函数，在调用时就要传参，如果未传参的话，参数的值就是undefined
		
		ex1:
			function show(){
				console.log("这是一个无参函数");
				console.log("调用时不需要传参");
			}
		ex2:
			function show(name){
				console.log(name);
			}

			function show(name,age){
				console.log(name);
				console.log(age);
			}

		返回值：
			在函数体内，经过运算后，需要传递给函数调用者的一个值，就是返回值。
			返回值是可选的，有返回值的话，需要使用 return 进行返回，最多只能返回一个值

			ex
				function show(name){
					return "你好:"+name;
				}
	3、函数的调用：
			在任意的JS合法的位置处，都允许做函数的调用

			var ret = 函数名(参数列表);

			有参数，则传参，否则，为空
			有返回值，可以接收，否则不接收
		练习：
			改版日期计算器为函数版本
			1、整体功能要封装到函数中
			2、将闰年判断的功能提出来独立成一个函数
				1、接收一个参数表示年份
				2、返回一个boolean值表示是否为闰年的结果
			3、整体功能中，所有的闰年判断通过函数调用完成
			4、通过 按钮 的单击操作，来调用日期计算器
	4、变量的作用域
		1、什么是变量的作用域
			变量的作用域指的是变量的可访问范围
		2、作用域的分类
			1、局部变量
				使用var关键字声明在某个函数内的变量，都是局部变量

				局部变量只能在声明的函数内使用，出了函数则无法使用
			2、全局变量
				1、在function之外声明的变量都是全局变量
				2、声明变量不使用var关键字的时候，都是全局变量

				全局变量可以应用在各个函数中以及各个位置处

				注意：全局变量，推荐放在所有的function之外，使用var关键字去声明



