1、数据类型
	1、什么是数据类型
		数据的类型，约束了数据在内存中所占的空间大小
	2、JS的数据类型分类
		1、基本数据类型(原始类型)
			1、number类型
				数字类型，可以表示32位(4字节)的正数或64位(8字节)的浮点数
				整数：
					允许表示十进制，八进制 和 十六进制
					十进制：var num = 321;
					八进制：var num = 010;
					十六进制：var num = 0x35;
				小数：
					小数点计数法：var num = 123.456;
					指数计数法：var num = 1.5e3;
			2、string类型
				字符串类型
				由Unicode的字符，数字和标点组成
				注意：字符串在使用时必须用' ' 或 " "引起来

				每个字符都有自己的Unicode码
				1、查看字符的Unicode码
					var str = "张";

					//得到十进制Unicode
					var r = str.charCodeAt() ;
					//将 r 转换为 十六进制 的字符串
					r = r.toString(16);
				2、如何将Unicode码转换为对应的字符
					已知Unicode码：5f20
					var str = "\u5f20"; //正确写法
					var s1 = "\u"+5f20; //错误写法
				3、中文范围
					"\u4e00" ~ "\u9fa5"
				4、转义字符
					\n:换行
					\t:制表符
					\":"
					\':'
					\\:\
			3、boolean类型
				布尔类型，只用于表示真(true)或假(false)
				注意：
					boolean类型是可以参与到数字运算中的
					true当成1运算
					false当成0运算

					var r = 1 + true; // 2
					var r = 3685 * false; // 0
					var r = true + false; // 1
			4、undefined类型
				产生undefined场合：
				1、声明变量未赋值
				2、访问对象不存在的属性时
			5、查看数据类型
				使用typeof()或typeof查看变量的数据类型
					var num = 35;
					var t1 = typeof(num);
					var t2 = typeof num;
		2、引用数据类型
2、数据类型转换
	不同的数据类型之间的数据在进行运算时是如何转换的。
	1、隐式转换
		1、数字 + 字符串
			将数字先转换为字符串，再进行拼接
			var num = 15;
			var str = "18";
			var r = num + str; //1518

			var r = "15"+18+15; //151815
			var r = 15+18+"15"; //3315
			var r = "15"+(18+15); //1533
		2、数字 + 布尔
			将布尔类型转换为数字
		3、布尔 + 字符串
			将布尔转换为字符串，再拼接
			var b = true;
			var s = "你好";
			var r = b + s;
			r:"true你好"
		注意：
			1、任意类型与字符串做加法运算时，都是将其他类型先转换为字符串再拼接
			2、字符串与数字进行运算时
				加法：拼接
				其余操作(-,*,/,%)：先将字符串转换成数字，再做运算
	2、显示转换(转换函数、强制转换)
		1、toString()
			将任意类型的数据转换为字符串，并返回转换后的结果
			语法：
				var r = 变量.toString();
			ex:
				var num = 18;
				var r = num.toString();

				var num = 18;
				var r = num+"";
		2、parseInt()
			作用：将任意类型的数据转换成整数，如果实在无法转换的话，则返回NaN(Not a Number)
			语法：
				var r = parseInt(数据);
			ex:
				1、
					var r = parseInt("13");
					r : 13
				2、
					var r = parseInt("13.5");
					r : 13
				3、
					var r = parseInt("13你好");
					r : 13
				4、
					var r = parseInt("你好13");
					r : NaN
		3、parseFloat()
			作用等同于parseInt()，允许转换为小数
			1、
				var r = parseFloat("35.5");
				结果为:35.5
			2、
				var r = parseFloat("35.5abc");
				结果为:35.5
			3、
				var r = parseFloat("abc35.5");
				结果为:NaN
		4、Number()
			作用：将任意类型数据转换为数字，只要包含非法字符的话，结果就为NaN
			1、
				var r = Number("35.5");
				结果为: 35.5
			2、
				var r = Number("35");
				结果为: 35
			3、
				var r = Number("35你好");
				结果为: NaN
		练习：
			1、创建网页04-dataType-exer.html
			2、网页中弹出一个输入提示框，允许输入数据
				var input = window.prompt("提示文字：");
				input中保存的就是用户输入的数据
			3、在输入提示框中输入一个数字
			4、将输入的数据 + 10 ，并打印计算后的结果
			5、使用typeof查看输入的数据的数据类型
			6、将输入的数据转换为数字后，再+10


